import React, { useEffect, useState } from 'react';
import './App.css';

function App() {
  const [points, setPoints] = useState(0);
  const [messages, setMessages] = useState([]);

  useEffect(() => {
    if (window.Telegram && window.Telegram.WebApp) {
      const tg = window.Telegram.WebApp;
      tg.ready();
    }
  }, []);

  const handleTouchStart = (event) => {
    event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

    const touches = event.changedTouches;
    setPoints(prevPoints => prevPoints + touches.length);

    const newMessages = Array.from(touches).map(touch => ({
      id: Date.now() + touch.identifier,
      text: '+1 üí®',
      x: touch.clientX,
      y: touch.clientY
    }));

    setMessages(prevMessages => [...prevMessages, ...newMessages]);

    setTimeout(() => {
      setMessages(prevMessages =>
        prevMessages.filter(msg => !newMessages.some(newMsg => newMsg.id === msg.id))
      );
    }, 2000); // –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
  };

  return (
    <div className="App" onTouchStart={handleTouchStart}>
      <div className="points-display">
        <h1>–í–∞—à–∏ –æ—á–∫–∏: {points}</h1>
      </div>
      <div className="plant-container">
        <div className="plant"></div>
      </div>
      <div className="messages-container">
        {messages.map(msg => (
          <div key={msg.id} className="message" style={{ left: msg.x, top: msg.y }}>
            {msg.text}
          </div>
        ))}
      </div>
    </div>
  );
}

export default App;
